{"version":3,"sources":["components/FaceRecognition/FaceRecognition.js","components/Navigation/Navigation.js","components/Logo/Logo.js","components/ImageLinkForm/ImageLinkForm.js","components/Signin/Signin.js","components/Register/Register.js","components/Rank/Rank.js","App.js","registerServiceWorker.js","index.js","components/Logo/brain.png"],"names":["FaceRecognition","imageUrl","box","className","id","alt","src","width","heigh","style","top","topRow","right","rightCol","bottom","bottomRow","left","leftCol","Navigation","onRouteChange","isSignedIn","display","justifyContent","onClick","Logo","options","max","height","paddingTop","brain","ImageLinkForm","onInputChange","onButtonSubmit","type","onChange","Signin","props","onEmailChange","event","setState","signInEmail","target","value","onPasswordChange","signInPassword","onSubmitSignIn","fetch","method","headers","body","JSON","stringify","email","state","password","then","response","json","user","loadUser","this","htmlFor","name","React","Component","Register","onNameChange","Rank","entries","particleOptions","particles","number","density","enable","value_area","initialState","input","route","joined","App","data","calculateFaceLocation","clarifaiFace","outputs","regions","region_info","bounding_box","image","document","getElementById","Number","console","log","left_col","top_row","right_col","bottom_row","displayFaceBox","count","Object","assign","catch","err","params","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","error","ReactDOM","render","URL","process","origin","addEventListener","status","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker","module","exports"],"mappings":"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","file":"static/js/main.67d14a4c.chunk.js","sourcesContent":["import React from 'react';\r\nimport './FaceRecognition.css';\r\n\r\nconst FaceRecognition = ({ imageUrl, box }) => {\r\n  return (\r\n    <div className='center ma'>\r\n      <div className='absolute mt2'>\r\n        <img id='inputimage' alt='' src={imageUrl} width='500px' heigh='auto'/>\r\n        <div className='bounding-box' style={{top: box.topRow, right: box.rightCol, bottom: box.bottomRow, left: box.leftCol}}></div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FaceRecognition;","import React from 'react';\r\n\r\nconst Navigation = ({ onRouteChange, isSignedIn }) => {\r\n    if (isSignedIn) {\r\n      return (\r\n        <nav style={{display: 'flex', justifyContent: 'flex-end'}}>\r\n          <p onClick={() => onRouteChange('signout')} className='f3 link dim black underline pa3 pointer'>Sign Out</p>\r\n        </nav>\r\n      );\r\n    } else {\r\n      return (\r\n        <nav style={{display: 'flex', justifyContent: 'flex-end'}}>\r\n          <p onClick={() => onRouteChange('signin')} className='f3 link dim black underline pa3 pointer'>Sign In</p>\r\n          <p onClick={() => onRouteChange('register')} className='f3 link dim black underline pa3 pointer'>Register</p>\r\n        </nav>\r\n      );\r\n    }\r\n}\r\n\r\nexport default Navigation;","import React from 'react';\r\nimport Tilt from 'react-tilt';\r\nimport brain from './brain.png';\r\nimport './Logo.css';\r\n\r\nconst Logo = () => {\r\n  return (\r\n    <div className='ma4 mt0'>\r\n      <Tilt className=\"Tilt br2 shadow-2\" options={{ max : 55 }} style={{ height: 150, width: 150 }} >\r\n        <div className=\"Tilt-inner pa3\">\r\n          <img style={{paddingTop: '5px'}} alt='logo' src={brain}/>\r\n        </div>\r\n      </Tilt>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Logo;","import React from 'react';\r\nimport './ImageLinkForm.css';\r\n\r\nconst ImageLinkForm = ({ onInputChange, onButtonSubmit }) => {\r\n  return (\r\n    <div>\r\n      <p className='f3'>\r\n        {'This Magic Brain will detect faces in your pictures. Paste the image URL to detect.'}\r\n      </p>\r\n      <div className='center'>\r\n        <div className='form center pa4 br3 shadow-5'>\r\n          <input className='f4 pa2 w-70 center' type='tex' onChange={onInputChange}/>\r\n          <button\r\n            className='w-30 grow f4 link ph3 pv2 dib white bg-light-purple'\r\n            onClick={onButtonSubmit}\r\n          >Detect</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ImageLinkForm;","import React from 'react';\r\n\r\nclass Signin extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            signInEmail: '',\r\n            signInPassword: ''\r\n        }\r\n    }\r\n\r\n    onEmailChange = (event) => {\r\n        this.setState({signInEmail : event.target.value})\r\n    }\r\n\r\n    onPasswordChange = (event) => {\r\n        this.setState({signInPassword : event.target.value})\r\n    }\r\n\r\n    onSubmitSignIn = () => {\r\n        fetch('https://tranquil-scrubland-90232.herokuapp.com/signin', {\r\n            method: 'post',\r\n            headers: {'Content-Type': 'application/json'},\r\n            body: JSON.stringify({\r\n                email: this.state.signInEmail,\r\n                password: this.state.signInPassword\r\n            })\r\n        })\r\n            .then(response => response.json())\r\n            .then(user => {\r\n                if(user.id){\r\n                    this.props.loadUser(user);\r\n                    this.props.onRouteChange('home');\r\n                }\r\n            })\r\n    }\r\n\r\n    render() {\r\n        const { onRouteChange } = this.props;\r\n        return (\r\n            <article className=\"br3 ba dark-gray b--black-10 mv4 w-100 w-50-m w-25-l mw6 shadow-5 center\">\r\n                <main className=\"pa4 black-80\">\r\n                    <div className=\"measure\">\r\n                        <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\r\n                        <legend className=\"center f1 fw6 ph0 mh0\">Sign In</legend>\r\n                        <div className=\"mt3\">\r\n                            <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">Email</label>\r\n                            <input \r\n                                onChange={this.onEmailChange}\r\n                                className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"email\" name=\"email-address\"  id=\"email-address\"/>\r\n                        </div>\r\n                        <div className=\"mv3\">\r\n                            <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">Password</label>\r\n                            <input \r\n                                onChange={this.onPasswordChange}\r\n                                className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"password\" name=\"password\"  id=\"password\"/>\r\n                        </div>\r\n                        </fieldset>\r\n                        <div className=\"\">\r\n                        <input \r\n                            onClick={this.onSubmitSignIn}\r\n                            className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\" \r\n                            type=\"submit\" \r\n                            value=\"Sign in\"/>\r\n                        </div>\r\n                        <div className=\"lh-copy mt3\">\r\n                        <p onClick={() => onRouteChange('register')} className=\"f6 link dim black pointer db\">Register</p>\r\n                        </div>\r\n                    </div>\r\n                </main>\r\n            </article>\r\n        );\r\n    }\r\n\t\r\n}\r\n\r\nexport default Signin;","import React from 'react';\r\n\r\nclass Register extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            email: '',\r\n            password: '',\r\n            name: ''\r\n        }\r\n    }\r\n\r\n\r\n    onNameChange = (event) => {\r\n        this.setState({name : event.target.value})\r\n    }\r\n\r\n    onEmailChange = (event) => {\r\n        this.setState({email : event.target.value})\r\n    }\r\n\r\n    onPasswordChange = (event) => {\r\n        this.setState({password : event.target.value})\r\n    }\r\n\r\n\r\n    onSubmitSignIn = () => {\r\n        fetch('https://tranquil-scrubland-90232.herokuapp.com/register', {\r\n            method: 'post',\r\n            headers: {'Content-Type': 'application/json'},\r\n            body: JSON.stringify({\r\n                email: this.state.email,\r\n                password: this.state.password,\r\n                name: this.state.name\r\n            })\r\n        })\r\n            .then(response => response.json())\r\n            .then(user => {\r\n                if (user.id) {\r\n                    this.props.loadUser(user);\r\n                    this.props.onRouteChange('home');\r\n                }\r\n            })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <article className=\"br3 ba dark-gray b--black-10 mv4 w-100 w-50-m w-25-l mw6 shadow-5 center\">\r\n                <main className=\"pa4 black-80\">\r\n                    <div className=\"measure\">\r\n                        <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\r\n                        <legend className=\"center f1 fw6 ph0 mh0\">Register</legend>\r\n                        <div className=\"mt3\">\r\n                            <label className=\"db fw6 lh-copy f6\" htmlFor=\"name\">Name</label>\r\n                            <input \r\n                                onChange={this.onNameChange}\r\n                                className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"email\" name=\"email-address\"  id=\"email-address\"/>\r\n                        </div>\r\n                        <div className=\"mt3\">\r\n                            <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">Email</label>\r\n                            <input \r\n                                onChange={this.onEmailChange}\r\n                                className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"email\" name=\"email-address\"  id=\"email-address\"/>\r\n                        </div>\r\n                        <div className=\"mv3\">\r\n                            <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">Password</label>\r\n                            <input \r\n                                onChange={this.onPasswordChange}\r\n                                className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"password\" name=\"password\"  id=\"password\"/>\r\n                        </div>\r\n                        </fieldset>\r\n                        <div className=\"\">\r\n                        <input \r\n                            onClick={this.onSubmitSignIn}\r\n                            className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\" \r\n                            type=\"submit\" \r\n                            value=\"Register\"/>\r\n                        </div>\r\n                    </div>\r\n                </main>\r\n            </article>\r\n        );\r\n    }\r\n\t\r\n}\r\n\r\nexport default Register;","import React from 'react';\r\n\r\nconst Rank = ({ name, entries }) => {\r\n  return (\r\n    <div>\r\n      <div className='white f3'>\r\n        {`${name}, your current entry count is...`}\r\n      </div>\r\n      <div className='white f1'>\r\n        {entries}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Rank;","import React, {Component} from 'react';\r\nimport Particles from 'react-particles-js';\r\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\r\nimport Navigation from './components/Navigation/Navigation';\r\nimport Logo from './components/Logo/Logo';\r\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\r\nimport Signin from './components/Signin/Signin';\r\nimport Register from './components/Register/Register';\r\nimport Rank from './components/Rank/Rank';\r\nimport './App.css';\r\n\r\nconst particleOptions = {\r\n  particles: {\r\n    number: {\r\n      value: 220,\r\n      density: {\r\n        enable: true,\r\n        value_area: 800,\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nconst initialState = {\r\n      input: '',\r\n      imageUrl: '',\r\n      box: {},\r\n      route: 'signin',\r\n      isSignedIn: false,\r\n      user: {\r\n        id: '',\r\n        name: '',\r\n        email : \"\",\r\n        entries: 0,\r\n        joined: '',\r\n      }\r\n}\r\n\r\n\r\nclass App extends Component {\r\n  constructor(){\r\n    super();\r\n    this.state = initialState\r\n  }\r\n\r\n  loadUser = (data) => {\r\n    this.setState({\r\n      user: {\r\n        id: data.id,\r\n        name: data.name,\r\n        email : data.email,\r\n        entries: data.entries,\r\n        joined: data.joined,\r\n      }\r\n    })\r\n  }\r\n\r\n  calculateFaceLocation = (data) => {\r\n    const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\r\n    const image = document.getElementById('inputImage');\r\n    const width = Number(image.width);\r\n    const height = Number(image.height);\r\n    console.log(width, height);\r\n    console.log(clarifaiFace);\r\n    return {\r\n      leftCol: clarifaiFace.left_col * width,\r\n      topRow: clarifaiFace.top_row * height,\r\n      rightCol: width - (clarifaiFace.right_col * width),\r\n      bottomRow: height - (clarifaiFace.bottom_row * height)\r\n    }\r\n  }\r\n\r\n  displayFaceBox = (box) => {\r\n    this.setState({box: box});\r\n  }\r\n\r\n  onInputChange = (event) => {\r\n    this.setState({input: event.target.value})\r\n  }\r\n\r\n  //var locationData = response.outputs[0].data.regions[0].region_info.bounding_box\r\n\r\n  onButtonSubmit = () => {\r\n    this.setState({imageUrl: this.state.input})\r\n      fetch('https://tranquil-scrubland-90232.herokuapp.com/imageUrl', {\r\n        method: 'post',\r\n        headers: {'Content-Type': 'application/json'},\r\n        body: JSON.stringify({\r\n            input: this.state.input\r\n        })\r\n      })\r\n      .then(response => response.json())\r\n        .then(response => {\r\n          if (response) {\r\n            fetch('https://tranquil-scrubland-90232.herokuapp.com/image', {\r\n              method: 'put',\r\n              headers: {'Content-Type': 'application/json'},\r\n              body: JSON.stringify({\r\n                  id: this.state.user.id\r\n              })\r\n            })\r\n            .then(response => response.json())\r\n            .then(count => this.setState( Object.assign(this.state.user, {entries: count})))\r\n          }\r\n          this.displayFaceBox(this.calculateFaceLocation(response))\r\n        })\r\n        .catch(err => console.log(err));\r\n  }\r\n\r\n  onRouteChange = (route) => {\r\n    if(route === 'signout'){\r\n      this.setState(initialState)\r\n    }else if (route === 'home'){\r\n      this.setState({isSignedIn: true})\r\n    }\r\n    this.setState({route: route});\r\n  }\r\n\r\n  \r\n  render() {\r\n    const { isSignedIn, imageUrl, route, box } = this.state;\r\n    return (\r\n      <div className=\"App\">\r\n        <Particles className='particles' params={particleOptions}/>\r\n        <Navigation isSignedIn={isSignedIn} onRouteChange={this.onRouteChange}/>\r\n        {route === 'home' \r\n          ? <div>\r\n              <Logo />\r\n              <Rank\r\n                name={this.state.user.name}\r\n                entries={this.state.user.entries}\r\n              />\r\n              <ImageLinkForm \r\n                onInputChange={this.onInputChange} \r\n                onButtonSubmit={this.onButtonSubmit}/>\r\n              <FaceRecognition box={box} imageUrl={imageUrl}/>\r\n            </div>\r\n          : (route === 'signin')\r\n          ? <Signin loadUser={this.loadUser} onRouteChange={this.onRouteChange} />\r\n          : <Register loadUser={this.loadUser} onRouteChange={this.onRouteChange} />\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n} \r\n\r\nexport default App;\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport registerServiceWorker from './registerServiceWorker';\r\nimport 'tachyons';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\nregisterServiceWorker();\r\n","module.exports = __webpack_public_path__ + \"static/media/brain.799ab00b.png\";"],"sourceRoot":""}